import "../common/fast-interface.fil";

extern "impl.v" {
/* KERNEL_START=CONV2d_1 */
comp Conv2d<'G: 1>(
    clk: 1,
    I_0: ['G, 'G+1] 8,
    I_1: ['G, 'G+1] 8,
    I_2: ['G, 'G+1] 8,
    I_3: ['G, 'G+1] 8,
    I_4: ['G, 'G+1] 8,
    I_5: ['G, 'G+1] 8,
    I_6: ['G, 'G+1] 8,
    I_7: ['G, 'G+1] 8,
    I_8: ['G, 'G+1] 8,
    I_9: ['G, 'G+1] 8,
    I_10: ['G, 'G+1] 8,
    I_11: ['G, 'G+1] 8,
    I_12: ['G, 'G+1] 8,
    I_13: ['G, 'G+1] 8,
    I_14: ['G, 'G+1] 8,
    I_15: ['G, 'G+1] 8,
) -> (
    O_0: ['G+6, 'G+7] 8,
    O_1: ['G+6, 'G+7] 8,
    O_2: ['G+6, 'G+7] 8,
    O_3: ['G+6, 'G+7] 8,
    O_4: ['G+6, 'G+7] 8,
    O_5: ['G+6, 'G+7] 8,
    O_6: ['G+6, 'G+7] 8,
    O_7: ['G+6, 'G+7] 8,
    O_8: ['G+6, 'G+7] 8,
    O_9: ['G+6, 'G+7] 8,
    O_10: ['G+6, 'G+7] 8,
    O_11: ['G+6, 'G+7] 8,
    O_12: ['G+6, 'G+7] 8,
    O_13: ['G+6, 'G+7] 8,
    O_14: ['G+6, 'G+7] 8,
    O_15: ['G+6, 'G+7] 8,
);
/* KERNEL_END=CONV2d_1 */
}

comp Conv2dWrapper<'G:1>(
    I[N]: ['G, 'G+1] 8
) -> (
    O[N]: ['G+6, 'G+7] 8
) with {
    // We assert the exact value here because otherwise the caller cannot pass data correctly.
    exists L where L == 6;
    exists N where N == 16;
} {
    C := new Conv2d<'G>(
        I{0}, I{1}, I{2}, I{3}, I{4}, I{5}, I{6}, I{7},
        I{8}, I{9}, I{10}, I{11}, I{12}, I{13}, I{14}, I{15}
    );
    // Forward the outputs
    O{0} = C.O_0; O{1} = C.O_1; O{2} = C.O_2; O{3} = C.O_3;
    O{4} = C.O_4; O{5} = C.O_5; O{6} = C.O_6; O{7} = C.O_7;
    O{8} = C.O_8; O{9} = C.O_9; O{10} = C.O_10; O{11} = C.O_11;
    O{12} = C.O_12; O{13} = C.O_13; O{14} = C.O_14; O{15} = C.O_15;

    exists L = 6;
    exists N = 16;
}