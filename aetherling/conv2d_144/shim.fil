import "primitives/reshape.fil";

extern "impl.v" {
// KERNEL_START=Conv2d_144
comp Conv2d<'G: 9>(
    clk: 1,
    I: ['G, 'G+6] 8,
) -> (
    O: ['G+21, 'G+22] 8,
);
// KERNEL_END=Conv2d_144
}

comp main<'G: 144>(
    valid_up: interface['G],
    I[16]: ['G, 'G+6] 8
) -> (
    O[16]: ['G+156, 'G+157] 8
) {
    // Serialize inputs
    ser := new Serialize[8, 16, 1, 9, 6]<'G>(I{0..16});

    // Track the outputs of the convolution for deserialization
    bundle co[16]: for<j> @['G+9*j+21, 'G+9*j+22] 8;
    // Convolution requires 16 inputs
    C := new Conv2d;
    for i in 0..16 {
        // Each invocation of the Conv2D executes 3 cycles after the
        // previous one.
        c := C<'G+9*i>(ser.out{i});
        co{i} = c.O;
    }

    // Deserialize
    deser := new Deserialize[8, 16, 1, 9, 1]<'G+21>(co{0..16});
    O{0..16} = deser.out{0..16};
}