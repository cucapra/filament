import "primitives/reshape.fil";

extern "../verilog/conv2d_4.v" {
// KERNEL_START=Conv2d_4
comp Conv2d<'G: 1>(
    clk: 1,
    I_0: ['G, 'G+1] 8,
    I_1: ['G, 'G+1] 8,
    I_2: ['G, 'G+1] 8,
    I_3: ['G, 'G+1] 8,
) -> (
    O_0: ['G+6, 'G+7] 8,
    O_1: ['G+6, 'G+7] 8,
    O_2: ['G+6, 'G+7] 8,
    O_3: ['G+6, 'G+7] 8,
);
// KERNEL_END=Conv2d_4
}

comp main<'G: 4>(
    valid_up: interface['G],
    I[16]: ['G, 'G+1] 8
) -> (
    O[16]: ['G+9, 'G+10] 8
) {
    // Num bundles = 4
    // Bundle size = 4
    ser := new Serialize[8, 4, 4]<'G>(I{0..16});

    // Track the outputs of the convolution for deserialization
    bundle co[16]: for<j> ['G+j/4+6, 'G+j/4+7] 8;
    // Convolution requires 16 inputs
    C := new Conv2d;
    for i in 0..4 {
        c := C<'G+i>(
            ser.out{4*i+0}, ser.out{4*i+1},
            ser.out{4*i+2}, ser.out{4*i+3}
        );
        co{4*i+0} = c.O_0; co{4*i+1} = c.O_1;
        co{4*i+2} = c.O_2; co{4*i+3} = c.O_3;

    }

    // Deserialize the outputs
    de := new Deserialize[8, 4, 4]<'G+6>(co{0..16});
    O{0..16} = de.out{0..16};
}