import "primitives/reshape.fil";

extern "../verilog/conv2d_48.v" {
// KERNEL_START=Conv2d_48
comp Conv2d<'G: 3>(
    clk: 1,
    I: ['G, 'G+3] 8,
) -> (
    O: ['G+12, 'G+13] 8,
);
// KERNEL_END=Conv2d_48
}

comp main<'G: 48>(
    valid_up: interface['G],
    I[16]: ['G, 'G+3] 8
) -> (
    O[16]: ['G+57, 'G+58] 8
) {
    // During serializing, we expect the inputs to be produced every three
    // cycles and hold each signal for three cycles.
    ser := new Serialize[8, 16, 1, 3, 3]<'G>(I{0..16});

    // Track the outputs of the convolution for deserialization
    bundle co[16]: for<j> ['G+3*j+12, 'G+3*j+13] 8;
    // Convolution requires 16 inputs
    C := new Conv2d;
    for i in 0..16 {
        // Each invocation of the Conv2D executes 3 cycles after the
        // previous one.
        c := C<'G+3*i>(ser.out{i});
        co{i} = c.O;
    }

    deser := new Deserialize[8, 16, 1, 3, 1]<'G+12>(co{0..16});
    O{0..16} = deser.out{0..16};
}