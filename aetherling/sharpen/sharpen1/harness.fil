import "primitives/signed.fil";
import "primitives/state.fil";

extern "sharpen1.v" {
// KERNEL_START=Sharpen_1
comp Sharpen<G: 1>(
  clk: 1,
   I_0: [G, G+1] 8,
   I_1: [G, G+1] 8,
   I_2: [G, G+1] 8,
   I_3: [G, G+1] 8,
   I_4: [G, G+1] 8,
   I_5: [G, G+1] 8,
   I_6: [G, G+1] 8,
   I_7: [G, G+1] 8,
   I_8: [G, G+1] 8,
   I_9: [G, G+1] 8,
   I_10: [G, G+1] 8,
   I_11: [G, G+1] 8,
   I_12: [G, G+1] 8,
   I_13: [G, G+1] 8,
   I_14: [G, G+1] 8,
   I_15: [G, G+1] 8,
) -> (
   O_0: [G+7, G+8] 8,
   O_1: [G+7, G+8] 8,
   O_2: [G+7, G+8] 8,
   O_3: [G+7, G+8] 8,
   O_4: [G+7, G+8] 8,
   O_5: [G+7, G+8] 8,
   O_6: [G+7, G+8] 8,
   O_7: [G+7, G+8] 8,
   O_8: [G+7, G+8] 8,
   O_9: [G+7, G+8] 8,
   O_10: [G+7, G+8] 8,
   O_11: [G+7, G+8] 8,
   O_12: [G+7, G+8] 8,
   O_13: [G+7, G+8] 8,
   O_14: [G+7, G+8] 8,
   O_15: [G+7, G+8] 8
);
// KERNEL_END=Sharpen_1
}

comp main<G: 1>(
  go: interface[G],
   I_0: [G, G+1] 8,
   I_1: [G, G+1] 8,
   I_2: [G, G+1] 8,
   I_3: [G, G+1] 8,
   I_4: [G, G+1] 8,
   I_5: [G, G+1] 8,
   I_6: [G, G+1] 8,
   I_7: [G, G+1] 8,
   I_8: [G, G+1] 8,
   I_9: [G, G+1] 8,
   I_10: [G, G+1] 8,
   I_11: [G, G+1] 8,
   I_12: [G, G+1] 8,
   I_13: [G, G+1] 8,
   I_14: [G, G+1] 8,
   I_15: [G, G+1] 8,
) -> (
   O_0: [G+7, G+8] 8,
   O_1: [G+7, G+8] 8,
   O_2: [G+7, G+8] 8,
   O_3: [G+7, G+8] 8,
   O_4: [G+7, G+8] 8,
   O_5: [G+7, G+8] 8,
   O_6: [G+7, G+8] 8,
   O_7: [G+7, G+8] 8,
   O_8: [G+7, G+8] 8,
   O_9: [G+7, G+8] 8,
   O_10: [G+7, G+8] 8,
   O_11: [G+7, G+8] 8,
   O_12: [G+7, G+8] 8,
   O_13: [G+7, G+8] 8,
   O_14: [G+7, G+8] 8,
   O_15: [G+7, G+8] 8
) {

    s := new Sharpen<G>(I_0, I_1, I_2, I_3, I_4, I_5, I_6, I_7, I_8, I_9, I_10, I_11, I_12, I_13, I_14, I_15);
    O_0 = s.O_0; O_1 = s.O_1; O_2 = s.O_2; O_3 = s.O_3; O_4 = s.O_4; O_5 = s.O_5; O_6 = s.O_6; O_7 = s.O_7; O_8 = s.O_8; O_9 = s.O_9; O_10 = s.O_10; O_11 = s.O_11; O_12 = s.O_12; O_13 = s.O_13; O_14 = s.O_14; O_15 = s.O_15;
}