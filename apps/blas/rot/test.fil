import "apps/blas/rot/harness.fil";

comp main[W, N, MultsN, AddsN]<'G:II>(
  go: interface['G],
  c:   ['G, 'G+1] W,
  s:   ['G, 'G+1] W,
  x:   ['G, 'G+1] W*N,
  y:   ['G, 'G+1] W*N
) -> (
  out_1: ['G+L, 'G+L+1] W*N,
  out_2: ['G+L, 'G+L+1] W*N
) with {
  some L where L > 0;
  some II where II > 0;
} where W > 0,
        N > 0,
        MultsN > 0,
        AddsN > 0,
        MultsN % 4 == 0,   // need to do at least 4 multiplies at once
        AddsN % 2 == 0,   // need to do at least 2 adds at once
        N % (MultsN/4) == 0,
        (MultsN/4) % (AddsN/2) == 0
{
  Har := new Harness[W, N, MultsN, AddsN];
  h := Har<'G>(c, s, x, y);
  out_1 = h.out_1;
  out_2 = h.out_2;

  II := Har::II;
  L := Har::L;
}
