import "apps/blas/scal/scal.fil";

comp main<'G:II>(
  go: interface['G],
  a:   ['G, 'G+1] W,
  x_0: ['G, 'G+1] W,
  x_1: ['G, 'G+1] W,
  x_2: ['G, 'G+1] W,
  x_3: ['G, 'G+1] W,
  x_4: ['G, 'G+1] W,
  x_5: ['G, 'G+1] W,
  x_6: ['G, 'G+1] W,
  x_7: ['G, 'G+1] W,
  x_8: ['G, 'G+1] W,
  x_9: ['G, 'G+1] W,
  x_10: ['G, 'G+1] W,
  x_11: ['G, 'G+1] W,
  x_12: ['G, 'G+1] W,
  x_13: ['G, 'G+1] W,
  x_14: ['G, 'G+1] W,
  x_15: ['G, 'G+1] W,
) -> (
  y_0: ['G+L, 'G+L+1] W,
  y_1: ['G+L, 'G+L+1] W,
  y_2: ['G+L, 'G+L+1] W,
  y_3: ['G+L, 'G+L+1] W,
  y_4: ['G+L, 'G+L+1] W,
  y_5: ['G+L, 'G+L+1] W,
  y_6: ['G+L, 'G+L+1] W,
  y_7: ['G+L, 'G+L+1] W,
  y_8: ['G+L, 'G+L+1] W,
  y_9: ['G+L, 'G+L+1] W,
  y_10: ['G+L, 'G+L+1] W,
  y_11: ['G+L, 'G+L+1] W,
  y_12: ['G+L, 'G+L+1] W,
  y_13: ['G+L, 'G+L+1] W,
  y_14: ['G+L, 'G+L+1] W,
  y_15: ['G+L, 'G+L+1] W,
) with {
  let N = 8;
  let S = 16;
  let W = 32;
  some L where L > 0;
  some II where II > 0;
} {
  Sx := new Scal[W, S, N];

  bundle x[S]: ['G, 'G+1] W;
  x{0} = x_0; x{1} = x_1; x{2} = x_2; x{3} = x_3; 
  x{4} = x_4; x{5} = x_5; x{6} = x_6; x{7} = x_7;
  x{8} = x_8; x{9} = x_9; x{10} = x_10; x{11} = x_11;
  x{12} = x_12; x{13} = x_13; x{14} = x_14; x{15} = x_15;

  bundle y[S]: ['G+Sx::L, 'G+Sx::L + 1] W;

  s := Sx<'G>(x{0..S}, a);
  y{0..S} = s.out{0..S};
  y_0 = y{0};
  y_1 = y{1};
  y_2 = y{2};
  y_3 = y{3};
  y_4 = y{4};
  y_5 = y{5};
  y_6 = y{6};
  y_7 = y{7};
  y_8 = y{8};
  y_9 = y{9};
  y_10 = y{10};
  y_11 = y{11};
  y_12 = y{12};
  y_13 = y{13};
  y_14 = y{14};
  y_15 = y{15};

  L := Sx::L;
  II := Sx::II;
}
