import "primitives/state.fil";

comp R[W]<'G:3>(
    go: interface['G],
    a: ['G, 'G+1] W,
) -> () {
    let mults_ii = 2;
    let uses = 4;
    bundle a_bundle[uses]: for<k> ['G+k*mults_ii, 'G+(k+1)*mults_ii] W;

    Reg := new Register[W];
    s := Reg<'G, 'G+mults_ii>(a);
    a_bundle{0} = s.out;

    for i in 0..(uses-1) {
        s := Reg<'G+i*mults_ii, 'G+(i+2)*mults_ii>(a_bundle{i});
        a_bundle{i+1} = s.out;
    }
}