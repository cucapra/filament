import "primitives/core.fil";
import "primitives/sequential.fil";

comp main<G: 1>(
    @interface[G] go: 1,
    @[G+3, G+4] op: 1,
    @[G, G+1] left: 32,
    @[G, G+1] right: 32,
) -> (@[G+3, G+4] out: 32)
{
    A := new Add[32];
    M := new FastMult[32];
    m0 := M<G>(left, right);
    a0 := A<G>(left, right);
    // Use register to hold the adder's value
    r0 := new Register[32]<G, G+4>(a0.out);
    // Use the multiplexer when the mult's output is ready
    mx := new Mux[32]<G+3>(op, r0.out, m0.out);
    out = mx.out;
}