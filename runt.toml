ver = "0.4.0"


[[tests]]
name = "check"
paths = ["tests/check/*.fil", "primitives/*.fil"]
cmd = """
./target/debug/filament {} --check
"""
expect_dir = "tests/check/"

[[tests]]
name = "errors"
paths = ["tests/errors/**/*.fil"]
cmd = """
./target/debug/filament {}
"""

[[tests]]
name = "run"
paths = ["tests/run/*.fil"]
cmd = """
fud e -s cocotb.data {}.data --to cocotb-out {} -s filament.flags ' --show-models' -q
"""

# ============= Testing primitive implementations =============
[[tests]]
name = "floating point"
paths = ["tests/floating-point/harness.fil"]
cmd = """
dir=$(dirname {}) && \
./tests/utils/check.sh $dir 100
"""

[[tests]]
name = "floating point"
paths = ["tests/floating-point/harness.fil"]
cmd = """
dir=$(dirname {}) && \
./tests/utils/check.sh $dir 100
"""

[[tests]]
name = "divider"
paths = ["tests/iterative-divider/harness.fil"]
cmd = """
dir=$(dirname {}) && \
./tests/utils/check.sh $dir 100
"""

# ============ Larger designs in Filament =====================

# Compile directories within the tests/compile directory. All *.fil files in the
# use the same input and must produce the same output
[[tests]]
name = "systolic array"
paths = ["tests/systolic/*.fil"]
cmd = """
dir=$(dirname {}) && \
fud e -s cocotb.data "$dir/data.json" \
      --to cocotb-out {} \
      -s filament.flags ' --show-models' -q
"""


# Aetherling evaluation
[[tests]]
name = "aetherling evaluation"
paths = ["aetherling/**/harness.fil"]
cmd = """
dir=$(dirname {}) && \
fud e -s cocotb.data "$dir/data.json" --to cocotb-out {} -s calyx.flags ' -d canonicalize' -q | jq
"""

# frisc
[[tests]]
name = "frisc tests"
paths = ["frisc/test/*.fil"]
cmd = """
fud e -s cocotb.data {}.data --to cocotb-out {} -s calyx.flags ' -d canonicalize' -q
"""

# ============== Examples in the documentation ============
[[tests]]
name = "examples"
paths = ["examples/*.fil", "tests/check/*.fil"]
cmd = """
./target/debug/filament {} --check
"""

[[tests]]
name = "run examples"
paths = ["examples/tut-seq.fil", "examples/tut-pipe.fil"]
expect_dir = "examples/run/"
cmd = """
fud e -s cocotb.data examples/data.json --to cocotb-out {} -s calyx.flags ' -d canonicalize' -q
"""
