import "primitives/core.fil";

comp Max_mult_add<G, L>(
  @interface[G, max(G, L)+5] go_G: 1,
  @interface[L, max(G, L)+5] go_L: 1,
  @[G, G+1] a: 32,
  @[G, G+1] b: 32,
  @[L, L+1] c: 32,
  @[L, L+1] d: 32,
) -> (
  @[max(G, L)+4, max(G, L)+5] out: 32
) {

  M0 := new MultComb[32];
  M1 := new MultComb[32];
  L0 := new Register[32];
  L1 := new Register[32];
  A := new Add[32];

  m0 := M0<G>(a, b);
  m1 := M1<L>(c, d);

  // Register the signals till both outputs are available.
  m0_l := L1<G, max(G, L)+5>(m0.out);
  m1_l := L0<L, max(G, L)+5>(m1.out);
  a0 := A<max(G, L)+4>(m0_l.out, m1_l.out);

  out = a0.out;
}
