import "primitives/comb.fil";

extern "./common/mult.sv" {
  comp Mult<T: 2>(
    clk: 1,
    reset: 1,
    // Explicit interface signal that shows evidence for event "T".
    @interface[T] go_T: 1,
    // ---------
    @[T, T+2] left: 32,
    @[T, T+1] right: 32
  ) -> (
    @[T+2, T+3] out: 32,
  );
}

comp main<G: 2>(
  @interface[G] go_G: 1,
  @[G, G+2] left: 32,
  @[G, G+1] right: 32,
) -> (
  @[G+4, G+5] out: 32,
) {
  M0 := new Mult;
  M1 := new Mult;

  ten := new Const[32, 10]<G+2, G+4>();

  m0 := M0<G>(left, right);
  m1 := M1<G+2>(ten.out, m0.out);
  out = m1.out;
}
