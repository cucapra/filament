import "primitives/core.fil";

comp AddOrSub[#W, #Sel]<G: 1>(
    @[G, G+1] left: #W,
    @[G, G+1] right: #W,
) -> (
    @[G, G+1] out: #W,
) where #W > 0, #Sel < 2 {
    if #Sel == 0 {
        a := new Add[#W]<G>(left, right);
        out = a.out;
    } else {
        b := new Sub[#W]<G>(left, right);
        out = b.out;
    }
}

comp main<G: 1>(
    @[G, G+1] left: 8,
    @[G, G+1] right: 8
) -> (
    @[G, G+1] sum: 8,
    @[G, G+1] diff: 8,
) {
    a := new AddOrSub[8, 0]<G>(left, right);
    s := new AddOrSub[8, 1]<G>(left, right);
    sum = a.out;
    diff = s.out;
}