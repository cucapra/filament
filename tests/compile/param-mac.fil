import "primitives/core.fil";
import "primitives/state.fil";

comp Mac[W, N]<G: 1>(
    @[G, G+1] left: W,
    @[G, G+1] right: W,
    @[G+N, G+N+1] acc: W,
) -> (
    @[G+N, G+N+1] out: W,
) {
    m := new MultComb[W]<G>(left, right);
    s := new Shift[W, N]<G>(m.out);
    a := new Add[W]<G+N>(s.out, acc);
    out = a.out;
}

comp main<G: 1>(
    @interface[G] en: 1,
    @[G, G+1] left: 32,
    @[G, G+1] right: 32,
) -> (
    @[G+4, G+5] out0: 32,
    @[G+10, G+11] out1: 32
) {
    p0 := new Prev[32, 1]<G+4>(s0.out);
    s0 := new Mac[32, 4]<G>(left, right, p0.prev);

    p1 := new Prev[32, 1]<G+10>(s1.out);
    s1 := new Mac[32, 10]<G>(left, right, p1.prev);
    out0 = s0.out;
    out1 = s1.out;
}