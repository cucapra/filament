import "primitives/core.fil";

comp Mac[W, N]<'G: 1>(
     left: ['G, 'G+1] W,
     right: ['G, 'G+1] W,
     acc: ['G+N, 'G+N+1] W
) -> (
     out: ['G+N, 'G+N+1] W
) where W > 0 {
    m := new MultComb[W]<'G>(left, right);
    s := new Shift[W, N]<'G>(m.out);
    a := new Add[W]<'G+W>(s.out, acc);
    out = a.out;
}

comp main<'G: 1>(
     in: ['G, 'G+1] 32
) -> ( out: ['G+4, 'G+5] 32) {
    s := new Shift[32, 2]<'G>(in);
    out = s.out;
}