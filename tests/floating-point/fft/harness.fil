import "fft-comb-8pt.fil";
import "primitives/reshape.fil";
import "fft-comb.fil";

extern "spiral-fft.v" {
  // 8 point fft generated by spiral
  comp dft_top<'G: 1>(
    clk: 1,
    reset: 1,
    X0: ['G, 'G+1] 32, // real part of first input
    X1: ['G, 'G+1] 32, // imaginary part of first input
    X2: ['G, 'G+1] 32,
    X3: ['G, 'G+1] 32,
    X4: ['G, 'G+1] 32,
    X5: ['G, 'G+1] 32,
    X6: ['G, 'G+1] 32,
    X7: ['G, 'G+1] 32,
    X8: ['G, 'G+1] 32,
    X9: ['G, 'G+1] 32,
    X10: ['G, 'G+1] 32,
    X11: ['G, 'G+1] 32,
    X12: ['G, 'G+1] 32,
    X13: ['G, 'G+1] 32,
    X14: ['G, 'G+1] 32,
    X15: ['G, 'G+1] 32,
  ) -> (
    Y0: ['G+54, 'G+55] 32, // outputs happen 54 cycles after inputs
    Y1: ['G+54, 'G+55] 32,
    Y2: ['G+54, 'G+55] 32,
    Y3: ['G+54, 'G+55] 32,
    Y4: ['G+54, 'G+55] 32,
    Y5: ['G+54, 'G+55] 32,
    Y6: ['G+54, 'G+55] 32,
    Y7: ['G+54, 'G+55] 32,
    Y8: ['G+54, 'G+55] 32,
    Y9: ['G+54, 'G+55] 32,
    Y10: ['G+54, 'G+55] 32,
    Y11: ['G+54, 'G+55] 32,
    Y12: ['G+54, 'G+55] 32,
    Y13: ['G+54, 'G+55] 32,
    Y14: ['G+54, 'G+55] 32,
    Y15: ['G+54, 'G+55] 32,
  );
}

comp main<'G: 1>(
  in: ['G, 'G+1] 32*16 // 8 complex numbers bundled together
) -> (
  spiral: ['G+54, 'G+55] 32*16, // output from spiral
  fil_8: ['G, 'G+1] 32*16, // output from 8 point fft
  fil_comb: ['G, 'G+1] 32*16, // output from combinational fft
) 
{
  // split input into bundle
  split := new SplitWire[32, 16]<'G>(in);
  
  // hook up 8pt fft
  f8 := new FFT8<'G>(split.out{0..16});

  f8w := new ConcatBundle[32, 16]<'G>(f8.out{0..16});
  fil_8 = f8w.out;

  // hook up comb fft
  fc := new CombFFT[3, 32, 8]<'G>(split.out{0..16});

  fcw := new ConcatBundle[32, 16]<'G>(fc.out{0..16});
  fil_comb = fcw.out;

  // hook up spiral dft
  spdft := new dft_top<'G>(
    split.out{0},
    split.out{1},
    split.out{2},
    split.out{3},
    split.out{4},
    split.out{5},
    split.out{6},
    split.out{7},
    split.out{8},
    split.out{9},
    split.out{10},
    split.out{11},
    split.out{12},
    split.out{13},
    split.out{14},
    split.out{15}
  );

  bundle spiral_bundle[16]: ['G+54, 'G+55] 32;
  spiral_bundle{0} = spdft.Y0;
  spiral_bundle{1} = spdft.Y1;
  spiral_bundle{2} = spdft.Y2;
  spiral_bundle{3} = spdft.Y3;
  spiral_bundle{4} = spdft.Y4;
  spiral_bundle{5} = spdft.Y5;
  spiral_bundle{6} = spdft.Y6;
  spiral_bundle{7} = spdft.Y7;
  spiral_bundle{8} = spdft.Y8;
  spiral_bundle{9} = spdft.Y9;
  spiral_bundle{10} = spdft.Y10;
  spiral_bundle{11} = spdft.Y11;
  spiral_bundle{12} = spdft.Y12;
  spiral_bundle{13} = spdft.Y13;
  spiral_bundle{14} = spdft.Y14;
  spiral_bundle{15} = spdft.Y15;

  spiral_wire := new ConcatBundle[32, 16]<'G+54>(spiral_bundle{0..16});
  spiral = spiral_wire.out;
}