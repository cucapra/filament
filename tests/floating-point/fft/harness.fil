import "primitives/reshape.fil";
import "implementations/fft-comb.fil";
import "implementations/fft-comb-pease.fil";
// import "implementations/fft-pipelined.fil";

extern "spiral-fft.v" {
  // 16 point fft generated by spiral
  comp dft_top<'G: 1>(
    clk: 1,
    reset: 1,
    X0: ['G, 'G+1] 32, // real part of first input
    X1: ['G, 'G+1] 32, // imaginary part of first input
    X2: ['G, 'G+1] 32,
    X3: ['G, 'G+1] 32,
    X4: ['G, 'G+1] 32,
    X5: ['G, 'G+1] 32,
    X6: ['G, 'G+1] 32,
    X7: ['G, 'G+1] 32,
    X8: ['G, 'G+1] 32,
    X9: ['G, 'G+1] 32,
    X10: ['G, 'G+1] 32,
    X11: ['G, 'G+1] 32,
    X12: ['G, 'G+1] 32,
    X13: ['G, 'G+1] 32,
    X14: ['G, 'G+1] 32,
    X15: ['G, 'G+1] 32,
    X16: ['G, 'G+1] 32,
    X17: ['G, 'G+1] 32,
    X18: ['G, 'G+1] 32,
    X19: ['G, 'G+1] 32,
    X20: ['G, 'G+1] 32,
    X21: ['G, 'G+1] 32,
    X22: ['G, 'G+1] 32,
    X23: ['G, 'G+1] 32,
    X24: ['G, 'G+1] 32,
    X25: ['G, 'G+1] 32,
    X26: ['G, 'G+1] 32,
    X27: ['G, 'G+1] 32,
    X28: ['G, 'G+1] 32,
    X29: ['G, 'G+1] 32,
    X30: ['G, 'G+1] 32,
    X31: ['G, 'G+1] 32
  ) -> (
    Y0: ['G+65, 'G+66] 32, // outputs happen 65 cycles after inputs
    Y1: ['G+65, 'G+66] 32,
    Y2: ['G+65, 'G+66] 32,
    Y3: ['G+65, 'G+66] 32,
    Y4: ['G+65, 'G+66] 32,
    Y5: ['G+65, 'G+66] 32,
    Y6: ['G+65, 'G+66] 32,
    Y7: ['G+65, 'G+66] 32,
    Y8: ['G+65, 'G+66] 32,
    Y9: ['G+65, 'G+66] 32,
    Y10: ['G+65, 'G+66] 32,
    Y11: ['G+65, 'G+66] 32,
    Y12: ['G+65, 'G+66] 32,
    Y13: ['G+65, 'G+66] 32,
    Y14: ['G+65, 'G+66] 32,
    Y15: ['G+65, 'G+66] 32,
    Y16: ['G+65, 'G+66] 32,
    Y17: ['G+65, 'G+66] 32,
    Y18: ['G+65, 'G+66] 32,
    Y19: ['G+65, 'G+66] 32,
    Y20: ['G+65, 'G+66] 32,
    Y21: ['G+65, 'G+66] 32,
    Y22: ['G+65, 'G+66] 32,
    Y23: ['G+65, 'G+66] 32,
    Y24: ['G+65, 'G+66] 32,
    Y25: ['G+65, 'G+66] 32,
    Y26: ['G+65, 'G+66] 32,
    Y27: ['G+65, 'G+66] 32,
    Y28: ['G+65, 'G+66] 32,
    Y29: ['G+65, 'G+66] 32,
    Y30: ['G+65, 'G+66] 32,
    Y31: ['G+65, 'G+66] 32
  );
}

comp main<'G: 1>(
  in: ['G, 'G+1] 32*32 // 16 complex numbers bundled together
) -> (
  spiral: ['G+65, 'G+66] 32*32, // output from spiral
  fil_comb: ['G, 'G+1] 32*32, // output from combinational fft
  fil_pease_comb: ['G, 'G+1] 32*32, // output from combinational pease fft
) 
{
  // split input into bundle
  split := new SplitWire[32, 32]<'G>(in);

  // hook up comb fft
  fc := new CombFFT[4]<'G>(split.out{0..32});

  fcw := new ConcatBundle[32, 32]<'G>(fc.out{0..32});
  fil_comb = fcw.out;

  // hook up pease fft
  fpc := new CombPeaseFFT[4]<'G>(split.out{0..32});

  fpcw := new ConcatBundle[32, 32]<'G>(fpc.out{0..32});
  fil_pease_comb = fpcw.out;

  // hook up spiral dft
  spdft := new dft_top<'G>(
    split.out{0},
    split.out{1},
    split.out{2},
    split.out{3},
    split.out{4},
    split.out{5},
    split.out{6},
    split.out{7},
    split.out{8},
    split.out{9},
    split.out{10},
    split.out{11},
    split.out{12},
    split.out{13},
    split.out{14},
    split.out{15},
    split.out{16},
    split.out{17},
    split.out{18},
    split.out{19},
    split.out{20},
    split.out{21},
    split.out{22},
    split.out{23},
    split.out{24},
    split.out{25},
    split.out{26},
    split.out{27},
    split.out{28},
    split.out{29},
    split.out{30},
    split.out{31}
  );

  bundle spiral_bundle[32]: ['G+65, 'G+66] 32;
  spiral_bundle{0} = spdft.Y0;
  spiral_bundle{1} = spdft.Y1;
  spiral_bundle{2} = spdft.Y2;
  spiral_bundle{3} = spdft.Y3;
  spiral_bundle{4} = spdft.Y4;
  spiral_bundle{5} = spdft.Y5;
  spiral_bundle{6} = spdft.Y6;
  spiral_bundle{7} = spdft.Y7;
  spiral_bundle{8} = spdft.Y8;
  spiral_bundle{9} = spdft.Y9;
  spiral_bundle{10} = spdft.Y10;
  spiral_bundle{11} = spdft.Y11;
  spiral_bundle{12} = spdft.Y12;
  spiral_bundle{13} = spdft.Y13;
  spiral_bundle{14} = spdft.Y14;
  spiral_bundle{15} = spdft.Y15;
  spiral_bundle{16} = spdft.Y16;
  spiral_bundle{17} = spdft.Y17;
  spiral_bundle{18} = spdft.Y18;
  spiral_bundle{19} = spdft.Y19;
  spiral_bundle{20} = spdft.Y20;
  spiral_bundle{21} = spdft.Y21;
  spiral_bundle{22} = spdft.Y22;
  spiral_bundle{23} = spdft.Y23;
  spiral_bundle{24} = spdft.Y24;
  spiral_bundle{25} = spdft.Y25;
  spiral_bundle{26} = spdft.Y26;
  spiral_bundle{27} = spdft.Y27;
  spiral_bundle{28} = spdft.Y28;
  spiral_bundle{29} = spdft.Y29;
  spiral_bundle{30} = spdft.Y30;
  spiral_bundle{31} = spdft.Y31;

  spiral_wire := new ConcatBundle[32, 32]<'G+65>(spiral_bundle{0..32});
  spiral = spiral_wire.out;
}