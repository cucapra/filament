import "primitives/comb.fil";

extern "./common/mult.sv" {
  comp Mult<'T: 2>(
    clk: 1,
    reset: 1,
    // Explicit interface signal that shows evidence for event "'T".
    go_T: interface['T],
    // ---------
     left: ['T, 'T+2] 32,
     right: ['T, 'T+1] 32
  ) -> (
     out: ['T+2, 'T+3] 32,
  );
}

comp main<'G: 2>(
  go_G: interface['G],
   left: ['G, 'G+2] 32,
   right: ['G, 'G+1] 32,
) -> (
   out: ['G+4, 'G+5] 32,
) {
  M0 := new Mult;
  M1 := new Mult;

  ten := new Const[32, 10]<'G+2, 'G+4>();

  m0 := M0<'G>(left, right);
  m1 := M1<'G+2>(ten.out, m0.out);
  out = m1.out;
}
